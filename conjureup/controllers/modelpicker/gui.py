"""
This provides a gui screen for giving the user ability to define
their own model names, pick from existing models, use autogenerated
names, or utilize a suggested-model name if exists in a spells
metadata.
"""
from conjureup.app_config import app
from conjureup import juju, controllers, utils
from conjureup.telemetry import track_exception, track_screen
from conjureup.ui.views.model_picker import ModelPickerView


class ModelPicker:
    def __init__(self):
        self.view = None

    def __handle_exception(self, exc):
        track_exception(exc.args[0])

    def finish(self, model_name, back=False):
        if back:
            return controllers.use('clouds').render()
        app.current_model = model_name
        return controllers.use('newcloud').render()

    def render(self):
        track_screen("Model Picker")
        existing_models = []
        try:
            existing_models = juju.get_models(app.current_controller)
        except LookupError:
            app.log.debug("No existing models found for controller: {}".format(
                app.current_controller))

        suggested_model = app.config['metadata'].get('suggested-model',
                                                     utils.gen_model_name())

        view = ModelPickerView(app,
                               suggested_model=suggested_model,
                               existing_models=existing_models,
                               cb=self.finish)

        if len(existing_models) > 0:
            title = "Choose a Model or Create new"
        else:
            title = "Create a new Model"

        app.ui.set_header(
            title=title,
            excerpt=(
                "A Model is an environment in which application "
                "deployments take place.")
        )

        app.ui.set_footer("Please enter a name or press [ENTER] to continue")

        app.ui.set_body(view)


_controller_class = ModelPicker
